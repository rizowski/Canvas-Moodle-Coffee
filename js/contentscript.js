// Generated by CoffeeScript 1.6.3
var Calendar, CanvasPlugin, Config, Courses, Tools,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

$(document).ready(function() {
  return $.ajaxSetup({
    cache: true,
    headers: {
      "Authorization": "Bearer " + localStorage.canvaskey,
      "Access-Control-Allow-Origin": "*"
    }
  });
});

CanvasPlugin = (function() {
  CanvasPlugin.prototype.assignment_url = "https://lms.neumont.edu/api/v1/courses?include[]=total_scores&state[]=available";

  CanvasPlugin.prototype.canvas_courses_url = "https://lms.neumont.edu/courses/";

  function CanvasPlugin() {}

  return CanvasPlugin;

})();

Config = (function(_super) {
  __extends(Config, _super);

  function Config() {}

  Config.prototype.setup = function() {
    $('aside#right-side').children('div').remove();
    $("aside#right-side").children('h2').remove();
    $("aside#right-side").children('ul').remove();
    $("aside#right-side").prepend('<div class="assignments"><h2><a style="float: right; font-size: 10px; font-weight: normal;" class="event-list-view-calendar small-calendar" href="https://lms.neumont.edu/calendar">View Calendar</a>Upcoming Assignments</h2><div class="assignment-summary-div"><img id="assignload" style="display: block; margin-left: auto; margin-right: auto" src="images/ajax-reload-animated.gif"></img></div></div>');
    $("aside#right-side").prepend('<div class="events_list"><h2>Grade Summary</h2><div class="grade-summary-div"><img id="gradeload" style="display: block;margin-left: auto; margin-right: auto" src="images/ajax-reload-animated.gif"></img></div></div>');
    return $("aside#right-side").prepend('<div class="calendar"><h2>Calendar</h2><div class="calendar-div"><img id="calload" style="display: block; margin-left: auto; margin-right: auto" src="images/ajax-reload-animated.gif"></img></div></div>');
  };

  return Config;

})(CanvasPlugin);

Tools = (function(_super) {
  __extends(Tools, _super);

  function Tools() {}

  Tools.prototype.format_link = function(url, text) {
    return "<a href='" + url + "'>" + text + "</a>";
  };

  Tools.prototype.format_table = function(headers, contents_arr) {
    var content, content_items, final_string, header, _i, _j, _k, _len, _len1, _len2;
    if (headers.length !== contents_arr.length) {
      return;
    }
    final_string = "";
    final_string = "<table>";
    final_string += "<thead>";
    for (_i = 0, _len = headers.length; _i < _len; _i++) {
      header = headers[_i];
      final_string += "<th>";
      final_string += header;
      final_string += "</th>";
    }
    final_string += "</thead>";
    final_string += "<tbody>";
    for (_j = 0, _len1 = contents_arr.length; _j < _len1; _j++) {
      content_items = contents_arr[_j];
      final_string += "<tr>";
      for (_k = 0, _len2 = content_items.length; _k < _len2; _k++) {
        content = content_items[_k];
        final_string += "<td>";
        final_string += content;
        final_string += "</td>";
      }
      final_string += "</tr>";
    }
    final_string += "</tbody>";
    final_string += "</table>";
    return final_string;
  };

  Tools.prototype.parse_canvas_date = function(date) {
    var date_string, day, month, year;
    if (date === null) {
      return;
    }
    date_string = date.split('T');
    date = date_string[0].split('-');
    year = date[0];
    month = date[1];
    day = date[2];
    return new Date(year, month, day);
  };

  Tools.prototype.create_error = function(message) {
    return "<span style='color: red'>" + message + "</span>";
  };

  return Tools;

})(CanvasPlugin);

Calendar = (function(_super) {
  __extends(Calendar, _super);

  function Calendar() {}

  Calendar.prototype.get_calendar = function() {
    $('#calload').show;
    return $.ajax({
      type: 'GET',
      url: '/calendar',
      success: function(data) {
        var cal, response;
        response = $(data);
        cal = response.find(".mini_month");
        cal.find('img').css('display', 'none');
        return $('.calendar-div').html(cal).hide;
      },
      error: function(data) {
        var error, resp;
        resp = $(data);
        error = new Tools();
        return $('.calendar-div').html(error.create_error("Error Retrieving your calendar."));
      },
      complete: function() {
        return $('.calendar-div').fadeIn(500);
      }
    });
  };

  return Calendar;

})(CanvasPlugin);

Courses = (function(_super) {
  __extends(Courses, _super);

  function Courses() {}

  Courses.data = [];

  Courses.prototype.query_courses = function() {
    if (localStorage["canvaskey"] === null) {
      return;
    }
    return $.ajax({
      type: 'GET',
      crossDomain: true,
      url: this.assignment_url
    });
  };

  Courses.prototype.get_courses = function() {
    this.query_courses().success(function(response) {
      var course, end_date, item, today, tools, _i, _len;
      today = new Date();
      tools = new Tools();
      for (_i = 0, _len = response.length; _i < _len; _i++) {
        item = response[_i];
        console.log(item);
        end_date = tools.parse_canvas_date(item.end_at);
        if (end_date >= today) {
          course = {};
          course.id = item.id;
          course.start_date = tools.parse_canvas_date(item.start_at);
          course.end_date = end_date;
          course.current_grade = item.enrollments[0].computed_current_grade;
          course.current_score = item.enrollments[0].computed_current_score;
          course.final_grade = item.enrollments[0].computed_final_grade;
          course.final_score = item.enrollments[0].computed_final_score;
          course.url = this.canvas_courses_url + course.id;
          this.data.push(course);
          debugger;
        }
      }
      return this.data;
    }).error(function(data, msg) {
      this.data = ["Error"];
      return console.log(msg);
    });
    return this.data;
  };

  Courses.prototype.get_grades = function() {
    return console.log('grade load');
  };

  Courses.prototype.get_assignments = function() {
    var courses;
    $('#assignload').show();
    courses = this.get_courses();
    console.log('assignments load');
    return console.log(courses);
  };

  return Courses;

})(CanvasPlugin);

(function() {
  var checkIfAssideHasLoaded;
  return checkIfAssideHasLoaded = setInterval(function() {
    var cal, config, cour;
    if ($('ul.events').length > 0) {
      config = new Config();
      cal = new Calendar();
      cour = new Courses();
      config.setup();
      cal.get_calendar();
      cour.get_grades();
      cour.get_assignments();
      return clearInterval(checkIfAssideHasLoaded);
    }
  }, 50);
})();
